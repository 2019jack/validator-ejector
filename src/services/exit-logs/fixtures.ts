import { ethers } from 'ethers'

// Common events
export const VALIDATOR_EXIT_REQUEST_TOPIC = ethers.utils.id(
  'ValidatorExitRequest(uint256,uint256,uint256,bytes,uint256)'
)

// Oracle events
export const CONSENSUS_REACHED_TOPIC = ethers.utils.id(
  'ConsensusReached(uint256,bytes32,uint256)'
)

// Voting events
export const REQUESTS_HASH_SUBMITTED_TOPIC = ethers.utils.id(
  'RequestsHashSubmitted(bytes32)'
)
export const MOTION_CREATED_TOPIC = ethers.utils.id(
  'MotionCreated(uint256,address,address,bytes,bytes)'
)
export const MOTION_ENACTED_TOPIC = ethers.utils.id('MotionEnacted(uint256)')

const ORACLE_ADDRESS = '0x7ee534a6081d57afb25b5cff627d4d26217bb0e9'
const ORACLE_SUBMIT_REPORT_DATA_TX =
  '0xa61ee81e25ba52d6d970be34afc72fddd04712b5ab72918dd064bf3afae36151'
const ORACLE_SUBMIT_REPORT_TX =
  '0x5ed7945d37bbee8f0ecb68b5f9d7b2843bfaf8da66431ae4638c31c9bdadf176'

const VOTING_SUBMIT_REPORT_DATA_TX =
  '0xa61ee81e25ba52d6d970be34afc72fddd04712b5ab72918dd064bf3afae36151'
const VOTING_SUBMIT_REPORT_HASH_TX =
  '0xe5b1eb2f6bb114961125040d7341bc09c179ca96b85b1c1a774ef772c7567ccd'
const EASY_TRACK_MOTION_CREATOR_ADDRESS =
  '0xfAd931F268dc5f8E5cdc3000baAaC0cbdb4E0a9C'
const EASY_TRACK_MOTION_ID = '1'
const EASY_TRACK_MOTION_CREATE_TX =
  '0xa2074472dfd9a1d2040e907e33473d8e660ca99ea50d98d1838ca97cc9233d26'
const EASY_TRACK_MOTION_ENACTED_TX = VOTING_SUBMIT_REPORT_HASH_TX

const getExitRequestsData = () => {
  const PUBKEYS = [
    '0xab50ef06a0e48d9edf43e052f20dc912e0ba8d5b3f07051b6f2a13b094087f791af79b2780d395444a57e258d838083a',
    '0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb',
    '0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc',
    '0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd',
    '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
  ]

  const exitRequests = [
    { moduleId: 1, nodeOpId: 0, valIndex: 0, valPubkey: PUBKEYS[0] },
    { moduleId: 1, nodeOpId: 0, valIndex: 2, valPubkey: PUBKEYS[1] },
    { moduleId: 2, nodeOpId: 0, valIndex: 1, valPubkey: PUBKEYS[2] },
    { moduleId: 2, nodeOpId: 0, valIndex: 3, valPubkey: PUBKEYS[3] },
    { moduleId: 3, nodeOpId: 0, valIndex: 3, valPubkey: PUBKEYS[4] },
  ]

  const encodedRequests = exitRequests.map((request) => {
    const { moduleId, nodeOpId, valIndex, valPubkey } = request
    const pubkeyHex = valPubkey.slice(2)
    const moduleIdHex = ethers.utils
      .hexZeroPad(ethers.BigNumber.from(moduleId).toHexString(), 3)
      .slice(2)
    const nodeOpIdHex = ethers.utils
      .hexZeroPad(ethers.BigNumber.from(nodeOpId).toHexString(), 5)
      .slice(2)
    const valIndexHex = ethers.utils
      .hexZeroPad(ethers.BigNumber.from(valIndex).toHexString(), 8)
      .slice(2)
    return moduleIdHex + nodeOpIdHex + valIndexHex + pubkeyHex
  })
  const encodedData = '0x' + encodedRequests.join('')
  const dataFormat = 1
  const exitRequestsHash = ethers.utils.keccak256(
    ethers.utils.defaultAbiCoder.encode(
      ['bytes', 'uint256'],
      [encodedData, dataFormat]
    )
  )
  return { encodedData, exitRequestsHash }
}

export const oracleValidatorExitRequestEventsMock = () => ({
  url: '/',
  method: 'POST',
  result: {
    result: [
      {
        address: '0x0',
        topics: [
          VALIDATOR_EXIT_REQUEST_TOPIC,
          '0x0000000000000000000000000000000000000000000000000000000000000001',
          '0x0000000000000000000000000000000000000000000000000000000000000029',
          '0x0000000000000000000000000000000000000000000000000000000000055d94',
        ],
        data: '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000642475200000000000000000000000000000000000000000000000000000000000000030ab50ef06a0e48d9edf43e052f20dc912e0ba8d5b3f07051b6f2a13b094087f791af79b2780d395444a57e258d838083a00000000000000000000000000000000',
        blockNumber: '0x855ad2',
        transactionHash: ORACLE_SUBMIT_REPORT_DATA_TX,
      },
    ],
  },
  bodyMatcher: (body) => {
    return (
      body.method === 'eth_getLogs' &&
      body.params[0].topics[0] === VALIDATOR_EXIT_REQUEST_TOPIC
    )
  },
})

export const oracleConsensusReachedEventsMock = () => ({
  url: '/',
  method: 'POST',
  result: {
    result: [
      {
        address: '0x0',
        topics: [
          CONSENSUS_REACHED_TOPIC,
          '0x000000000000000000000000000000000000000000000000000000000050dfbf',
        ],
        data: '0xe166591e85d2fbb507a6111cdb8b9f23e093202254b10a2a334f8b4f35f5d3a80000000000000000000000000000000000000000000000000000000000000002',
        blockNumber: '0x855acc',
        transactionHash: ORACLE_SUBMIT_REPORT_TX,
        transactionIndex: '0x5f',
        blockHash:
          '0xa7c8bccf99f9f11df3c9550761a99d55fca777e135776615064dfa5dd77ed883',
        logIndex: '0x26c',
        removed: false,
      },
    ],
  },
  bodyMatcher: (body) => {
    return (
      body.method === 'eth_getLogs' &&
      body.params[0].topics[0] === CONSENSUS_REACHED_TOPIC
    )
  },
})

export const oracleSubmitReportDataTransactionMock = () => ({
  url: '/',
  method: 'POST',
  result: {
    result: {
      from: ORACLE_ADDRESS,
      gas: '0x1f8d4',
      gasPrice: '0x1353627781',
      maxFeePerGas: '0x28373c05f4',
      maxPriorityFeePerGas: '0x15752a00',
      hash: ORACLE_SUBMIT_REPORT_DATA_TX,
      input:
        '0x294492c8000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000050dfbf0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000004000000100000000290000000000055d94ab50ef06a0e48d9edf43e052f20dc912e0ba8d5b3f07051b6f2a13b094087f791af79b2780d395444a57e258d838083a',
      nonce: '0xa2',
      to: '0xb75a55efab5a8f5224ae93b34b25741edd3da98b',
      value: '0x0',
      type: '0x2',
      chainId: '0x5',
      v: '0x0',
      r: '0x11835aa656583cf2000b97f11a31d7ad9feab703267db724fb50ffb9d3e571e8',
      s: '0x4b5612dcd9218d337520eb9d7aa4dcae3ac0438bfbbe90d8e0a36d14713da1c2',
    },
  },
  body: {
    jsonrpc: '2.0',
    method: 'eth_getTransactionByHash',
    params: [ORACLE_SUBMIT_REPORT_DATA_TX],
    id: 1,
  },
})

export const oracleSubmitReportTransactionMock = () => ({
  url: '/',
  method: 'POST',
  result: {
    result: {
      from: ORACLE_ADDRESS,
      gas: '0x1a3a4',
      gasPrice: '0x1385e0747f',
      maxFeePerGas: '0x27fdeae104',
      maxPriorityFeePerGas: '0x15752a00',
      hash: ORACLE_SUBMIT_REPORT_TX,
      input:
        '0xe33a8d39000000000000000000000000000000000000000000000000000000000050dfbfe166591e85d2fbb507a6111cdb8b9f23e093202254b10a2a334f8b4f35f5d3a80000000000000000000000000000000000000000000000000000000000000001',
      nonce: '0xa1',
      to: '0x8374b4ac337d7e367ea1ef54bb29880c3f036a51',
      value: '0x0',
      type: '0x2',
      chainId: '0x5',
      v: '0x0',
      r: '0x5e6ea6f5e19667ab4bed8d12cef874d68f95318cb6c196676a8a363c64f66b31',
      s: '0x1d7c48feb50382b165263d4ca8f660384b5981b5e8da652811a55f8d7a7542ad',
    },
  },
  body: {
    jsonrpc: '2.0',
    method: 'eth_getTransactionByHash',
    params: [ORACLE_SUBMIT_REPORT_TX],
    id: 1,
  },
})

export const votingValidatorExitRequestEventsMock = () => ({
  url: '/',
  method: 'POST',
  result: {
    result: [
      {
        address: '0x0',
        topics: [
          VALIDATOR_EXIT_REQUEST_TOPIC,
          '0x0000000000000000000000000000000000000000000000000000000000000001',
          '0x0000000000000000000000000000000000000000000000000000000000000029',
          '0x0000000000000000000000000000000000000000000000000000000000055d94',
        ],
        data: '0x000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000642475200000000000000000000000000000000000000000000000000000000000000030ab50ef06a0e48d9edf43e052f20dc912e0ba8d5b3f07051b6f2a13b094087f791af79b2780d395444a57e258d838083a00000000000000000000000000000000',
        blockNumber: '0x855ad2',
        transactionHash: VOTING_SUBMIT_REPORT_DATA_TX,
      },
    ],
  },
  bodyMatcher: (body) => {
    return (
      body.method === 'eth_getLogs' &&
      body.params[0].topics[0] === VALIDATOR_EXIT_REQUEST_TOPIC
    )
  },
})

export const votingRequestsHashSubmittedEventsMock = () => {
  const { exitRequestsHash } = getExitRequestsData()
  return {
    url: '/',
    method: 'POST',
    result: {
      result: [
        {
          address: '0x0',
          topics: [REQUESTS_HASH_SUBMITTED_TOPIC],
          data: ethers.utils.defaultAbiCoder.encode(
            ['bytes32'],
            [exitRequestsHash]
          ),
          blockNumber: '0x855ad2',
          transactionHash: VOTING_SUBMIT_REPORT_HASH_TX,
        },
      ],
    },
    bodyMatcher: (body) => {
      return (
        body.method === 'eth_getLogs' &&
        body.params[0].topics[0] === REQUESTS_HASH_SUBMITTED_TOPIC
      )
    },
  }
}

export const easyTrackMotionEnactedEventsMock = () => ({
  url: '/',
  method: 'POST',
  result: {
    result: [
      {
        address: '0x0',
        topics: [
          MOTION_ENACTED_TOPIC,
          ethers.utils.defaultAbiCoder.encode(
            ['uint256'],
            [EASY_TRACK_MOTION_ID]
          ),
        ],
        data: '0x',
        blockNumber: '0x855ad2',
        transactionHash: EASY_TRACK_MOTION_ENACTED_TX,
      },
    ],
  },
  bodyMatcher: (body) => {
    return (
      body.method === 'eth_getLogs' &&
      body.params[0].topics[0] === MOTION_ENACTED_TOPIC
    )
  },
})

export const easyTrackMotionCreatedEventsMock = () => ({
  url: '/',
  method: 'POST',
  result: {
    result: [
      {
        address: '0x0',
        topics: [
          MOTION_CREATED_TOPIC,
          ethers.utils.defaultAbiCoder.encode(
            ['uint256'],
            [EASY_TRACK_MOTION_ID]
          ),
          ethers.utils.defaultAbiCoder.encode(
            ['address'],
            ['0x0000000000000000000000000000000000000000']
          ),
        ],
        data: ethers.utils.defaultAbiCoder.encode(
          ['address', 'bytes', 'bytes'],
          ['0x0000000000000000000000000000000000000000', '0x', '0x']
        ),
        blockNumber: '0x855ad2',
        transactionHash: EASY_TRACK_MOTION_CREATE_TX,
      },
    ],
  },
  bodyMatcher: (body) => {
    return (
      body.method === 'eth_getLogs' &&
      body.params[0].topics[0] === MOTION_CREATED_TOPIC
    )
  },
})

export const votingSubmitExitRequestsDataTransactionMock = () => {
  const { encodedData } = getExitRequestsData()
  const submitExitRequestsDataFragment = ethers.utils.Fragment.from(
    'function submitExitRequestsData(tuple(uint256 dataFormat, bytes data) request)'
  )
  const submitExitRequestsDataIface = new ethers.utils.Interface([
    submitExitRequestsDataFragment,
  ])

  const dataFormat = 1
  const request = [dataFormat, encodedData]
  const input = submitExitRequestsDataIface.encodeFunctionData(
    'submitExitRequestsData',
    [request]
  )

  return {
    url: '/',
    method: 'POST',
    result: {
      result: {
        from: '0x7ee534a6081d57afb25b5cff627d4d26217bb0e9',
        gas: '0x1f8d4',
        gasPrice: '0x1353627781',
        maxFeePerGas: '0x28373c05f4',
        maxPriorityFeePerGas: '0x15752a00',
        hash: VOTING_SUBMIT_REPORT_DATA_TX,
        input: input,
        nonce: '0xa2',
        to: '0xb75a55efab5a8f5224ae93b34b25741edd3da98b',
        value: '0x0',
        type: '0x2',
        chainId: '0x5',
        v: '0x1b',
        r: '0xabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcdefabcd',
        s: '0x1234567812345678123456781234567812345678123456781234567812345678',
      },
    },
    body: {
      jsonrpc: '2.0',
      method: 'eth_getTransactionByHash',
      params: [VOTING_SUBMIT_REPORT_DATA_TX],
      id: 1,
    },
  }
}

export const voteEasyTrackMotionCreateTransactionMock = () => ({
  url: '/',
  method: 'POST',
  result: {
    result: {
      from: EASY_TRACK_MOTION_CREATOR_ADDRESS,
      gas: '0x0ca100',
      gasPrice: '0x50d35881',
      maxFeePerGas: '0x50d35881',
      maxPriorityFeePerGas: '0x075a197b',
      hash: '0x32f6af0779f3f8f8286e4dccfacfe2eb0b073d1be0dffaf7b484b5aee87a6478',
      input:
        '0x8d80ff0a00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000a320008637515e85a4633e23dfc7861e2a9f53af640f7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003a46a761202000000000000000000000000f0211b7660680b49de1a7e9f25c65660f0a13feae4e6f5ed5d000000000000000000000000589e298964b9181d9938b84bb034c3bb9024e2c000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000011000000000000000000000000930c05be9144cdc53eef5fa87f51f9e2ca7f75e500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010434a0765d524dcc506dac8f46a30cde4d9f1a612a73552887cffaa79deaeb08ac65477e22b7e5d9f2617fea9c628e06049c3be543295b384a9badd5680ed8bd301c57619ae7b87e8f367e87454cd3ade02f99368a9ef8f70e57208ad242094b051f0333499d9aba1100beabbd315ba5147e0816fbdd96430c554a9e55e99d6b6d701b8a62b6b5939d747d2dd9ac3f50fa9cb8b299d1d8f10e26376d83e57ca0b1891423b95a472d3081805df18b4f05ae75b626ec4fc20616a18b619aedec6ab811e71bd0b39d6dc1e877326c6f881c2fe863b1f206322e41a696ab42ba49dd0a05b23664ada6884ccdf757d09b19a1fcde04d2dd72e3553782a0b89943a1da3a2dff471b000000000000000000000000000000000000000000000000000000000008637515e85a4633e23dfc7861e2a9f53af640f7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005e46a761202000000000000000000000000f0211b7660680b49de1a7e9f25c65660f0a13feaa00000000000000000000000000000000000000000000000000000000000000324e6f5ed5d000000000000000000000000d75778b855886fc5e1ea7d6bfada9eb68b35c19d000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002c00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000390000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000003a0000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000003b0000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000003c0000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000003d0000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000003fd94e61b35c634da120a6a0b2fc8d05428d24fdb09cbccdd8d29fe0ec83049aa6b206c5030d21e4d788e1f5e83693643cd99ff2a6aeb066a083c9d98d493c4171baf43a914bc9e6d6b4f10f137b52610340aee3e92df8e19aca44af7d6412faa550211bd1aec9e44eba16a2aacf1fcb73584dca3827f1cd0c2f7d1d827cc95a3cb1b28d44acd67005a240c2a4e55702d21366d048457f5ed1c73abc0340c1b5a745d13e57c072a0bd6af01d8fabc7be2d5b6aa4fdc837cdfd3175ac56bd364874feb1c2fd3ae26f6b11047bf38a154779ef34c50b2c89d5336970e0eb3bcda20405e7037c3dd7075f2f67f255f72b352f29b7afed928c105e4a35221187f017c4dfa881c000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
      nonce: '0x6d',
      to: '0x40A2aCCbd92BCA938b02010E17A5b8929b49130D',
      value: '0x00',
      type: '0x02',
      chainId: '0x01',
      v: '0x01',
      r: '0xad4aa98f0ce863ed0ff9e59831db74d94e668b3f1bc710de5b2aaf92174c1387',
      s: '0x3cb9f6f4abba4db0ac9903f3bcc518a86667d53b665d96742b0eaed9000f596b',
    },
  },
  body: {
    jsonrpc: '2.0',
    method: 'eth_getTransactionByHash',
    params: [EASY_TRACK_MOTION_CREATE_TX],
    id: 1,
  },
})
